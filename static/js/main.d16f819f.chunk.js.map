{"version":3,"sources":["Solver.ts","CSVDataService.ts","Chart.tsx","Graph.tsx","ParserModule.tsx","Settings.tsx","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["Solver","stepSize","timeStep","model","this","exp","variables","evaluate","Object","fromEntries","Map","compartments","forEach","c","set","name","value","length","EulerMethod","generateVariables","res","k","evaluateExpression","ODE","result","RungeKutta2Method","interVariables","k1","k2","RungeKutta4Base","allK","get","push","k3","k4","RungeKutta4Method","calculateStep","RungeKutta4AutomaticMethod","maxError","error","errors","resOneStep","resTwoStep","Array","from","values","v","i","Math","abs","reduce","p","BulirschStoerMethod","depth","triangleMatrix","n","m","modifiedMidpointMethod","Rnm","val","h","midpoints","lastPoint","z1","zm1","zm","CsvDataService","filename","data","csvContent","map","row","join","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","MyChart","props","onClickGetData","exportToCsv","state","generateData","header","dataPoint","timeSteps","currentTick","className","width","height","chartType","loader","options","hAxis","title","vAxis","rootProps","onClick","React","Component","Graph","getRandomInt","max","floor","random","nodePaint","node","ctx","fillStyle","id","toString","split","x","codePointAt","a","b","pow","padStart","beginPath","arc","y","PI","fill","font","textAlign","textBaseline","fillText","generateInitialDataStructure","symbols","sym","source","target","nodes","links","graphData","nodeLabel","nodeCanvasObject","Evaluator","require","Parser","ParserModule","onLoadModel","event","parser","parse","constants","parameters","simplify","setNewModel","setState","hasError","message","location","console","log","loadedModel","start","line","column","preventDefault","handleSelectedModel","selectedModel","config","concat","customModels","onSaveModel","localStorage","setItem","JSON","stringify","retrievedModels","getItem","generate","renderError","href","onChange","generateDropdownOptions","placeholder","handleChange","bind","Settings","onSimulate1","onSimulate","onSimulate10","onSimulate100","parseInt","steps","handleChangeSteps","onChangeStepSize","changeStepSize","parseFloat","handleChangeStepSize","onChangeMaxError","changeMaxError","handleChangeMaxError","handleSelectedSolver","changeSelectedSolver","settings","selectedSolver","Main","setModel","newModel","solver","getSolver","solveTime","time","endTime","applyResult","execute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d16f819f.chunk.js","sourcesContent":["import { Expression } from \"expr-eval\";\r\nimport { CModel } from \"./Types\";\r\n\r\nexport interface Result {\r\n    result: Map<string, number>;\r\n    timeStep: number;\r\n}\r\n\r\nexport abstract class Solver {\r\n    stepSize: number;\r\n    timeStep: number;\r\n    model: CModel;\r\n\r\n    constructor(stepSize: number, timeStep: number, model: CModel) {\r\n        this.stepSize = stepSize;\r\n        this.timeStep = timeStep;\r\n        this.model = model;\r\n    }\r\n\r\n    abstract execute(): Result;\r\n\r\n    evaluateExpression(exp: Expression, variables: Map<string, number>): number {\r\n        return exp.evaluate(Object.fromEntries(variables));\r\n    }\r\n\r\n    generateVariables() {\r\n        var variables: Map<string, number> = new Map();\r\n        this.model.compartments.forEach((c) => variables.set(c.name, c.value[c.value.length - 1]));\r\n        return variables;\r\n    }\r\n}\r\n\r\nexport class EulerMethod extends Solver {\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        var res: Map<string, number> = new Map();\r\n        this.model.compartments.forEach((c) => {\r\n            var k = this.evaluateExpression(c.ODE, variables) * this.stepSize;\r\n            res.set(c.name, c.value[c.value.length - 1] + k);\r\n        });\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: res,\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nexport class RungeKutta2Method extends Solver {\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        var res: Map<string, number> = new Map();\r\n        var interVariables = new Map(variables); //contains variable values at half point of the step\r\n        this.model.compartments.forEach((c) => {\r\n            var k1 = this.evaluateExpression(c.ODE, variables) * (this.stepSize / 2);\r\n            interVariables.set(c.name, c.value[c.value.length - 1] + k1);\r\n        });\r\n\r\n        this.model.compartments.forEach((c) => {\r\n            var k2 = this.evaluateExpression(c.ODE, interVariables) * this.stepSize;\r\n            res.set(c.name, c.value[c.value.length - 1] + k2);\r\n        });\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: res,\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nabstract class RungeKutta4Base extends Solver {\r\n    calculateStep(variables: Map<string, number>, stepSize: number) {\r\n        var res: Map<string, number> = new Map();\r\n        var interVariables = new Map(variables); //contains variables for intermediary steps\r\n        var allK = new Map();\r\n        //calc k1\r\n        this.model.compartments.forEach((c) => {\r\n            var k1 = this.evaluateExpression(c.ODE, variables) * stepSize;\r\n            interVariables.set(c.name, variables.get(c.name)! + k1 / 2);\r\n            allK.set(c.name, [k1]);\r\n        });\r\n        //calc k2\r\n        this.model.compartments.forEach((c) => {\r\n            var k2 = this.evaluateExpression(c.ODE, interVariables) * stepSize;\r\n            interVariables.set(c.name, variables.get(c.name)! + k2 / 2);\r\n            allK.get(c.name).push(k2);\r\n        });\r\n        //calc k3\r\n        this.model.compartments.forEach((c) => {\r\n            var k3 = this.evaluateExpression(c.ODE, interVariables) * stepSize;\r\n            interVariables.set(c.name, variables.get(c.name)! + k3);\r\n            allK.get(c.name).push(k3);\r\n        });\r\n        //calc k4\r\n        this.model.compartments.forEach((c) => {\r\n            var k4 = this.evaluateExpression(c.ODE, interVariables) * stepSize;\r\n            allK.get(c.name).push(k4);\r\n        });\r\n        //calc y_n+1\r\n        this.model.compartments.forEach((c) => {\r\n            res.set(\r\n                c.name,\r\n                variables.get(c.name)! +\r\n                    (1 / 6) * allK.get(c.name)[0] + //k1\r\n                    (2 / 6) * allK.get(c.name)[1] + //k2\r\n                    (2 / 6) * allK.get(c.name)[2] + //k3\r\n                    (1 / 6) * allK.get(c.name)[3], //k4\r\n            );\r\n        });\r\n        return res;\r\n    }\r\n}\r\n\r\nexport class RungeKutta4Method extends RungeKutta4Base {\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: this.calculateStep(variables, this.stepSize),\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nexport class RungeKutta4AutomaticMethod extends RungeKutta4Base {\r\n    error: number;\r\n    maxError: number;\r\n\r\n    constructor(stepSize: number, timeStep: number, model: CModel, maxError: number) {\r\n        super(stepSize, timeStep, model);\r\n        this.error = 0;\r\n        this.maxError = maxError;\r\n    }\r\n\r\n    execute() {\r\n        var errors: number[] = [];\r\n        var variables = this.generateVariables();\r\n        do {\r\n            //error control handling\r\n            //small error increase stepSize\r\n            if (this.error < this.maxError / 4) {\r\n                this.stepSize = this.stepSize * 2;\r\n            }\r\n            //big error decrease stepSize\r\n            else if (this.error > this.maxError) {\r\n                this.stepSize = this.stepSize / 2;\r\n            }\r\n            var resOneStep = this.calculateStep(variables, this.stepSize);\r\n            var resTwoStep = this.calculateStep(this.calculateStep(variables, this.stepSize / 2), this.stepSize / 2);\r\n\r\n            Array.from(resOneStep.values()).forEach((v, i) => {\r\n                errors.push(Math.abs(Array.from(resTwoStep.values())[i] - v));\r\n            });\r\n            this.error = errors.reduce((p, c) => p + c, 0) / errors.length;\r\n        } while (this.error > this.maxError);\r\n\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: resTwoStep,\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nexport class BulirschStoerMethod extends Solver {\r\n    error: number;\r\n    depth: number;\r\n    maxError: number;\r\n\r\n    constructor(stepSize: number, timeStep: number, model: CModel, depth: number, maxError: number) {\r\n        super(stepSize, timeStep, model);\r\n        this.error = 0;\r\n        this.depth = depth;\r\n        this.maxError = maxError;\r\n    }\r\n\r\n    //Bulirsch-Stoer Method\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        const maxDepth = 8; // how many rows to be calculated\r\n\r\n        var triangleMatrix: Map<string, number>[][] = [];\r\n\r\n        //error controlling loop\r\n        do {\r\n            //error control handling\r\n            //small error decrease depth or increase stepSize\r\n            if (this.error < this.maxError / 2) {\r\n                if (this.depth > 2) {\r\n                    this.depth = this.depth - 1;\r\n                } else {\r\n                    this.stepSize = this.stepSize * 2;\r\n                    this.depth = this.depth + 1;\r\n                }\r\n            }\r\n            //big error increase depth or decrease stepSize\r\n            else if (this.error > this.maxError) {\r\n                if (this.depth < maxDepth) {\r\n                    this.depth = this.depth + 1;\r\n                } else {\r\n                    this.stepSize = this.stepSize / 2;\r\n                    this.depth = this.depth - 1;\r\n                }\r\n            }\r\n\r\n            var errors: number[] = [];\r\n            for (let n = 0; n < this.depth; n++) {\r\n                //rows\r\n                triangleMatrix[n] = [];\r\n                for (let m = 0; m <= n; m++) {\r\n                    //columns\r\n                    if (m === 0) {\r\n                        //steps = 2(i+1)\r\n                        triangleMatrix[n][m] = this.modifiedMidpointMethod(variables, 2 * (n + 1));\r\n                    } else {\r\n                        //extrapolation\r\n                        var Rnm: Map<string, number> = new Map();\r\n                        this.model.compartments.forEach((c) => {\r\n                            var val =\r\n                                triangleMatrix[n][m - 1].get(c.name)! +\r\n                                (triangleMatrix[n][m - 1].get(c.name)! - triangleMatrix[n - 1][m - 1].get(c.name)!) /\r\n                                    ((n / (n - 1)) ** (2 * m) - 1);\r\n                            Rnm.set(c.name, val);\r\n\r\n                            //error control\r\n                            //only take error from best estimate\r\n                            if (m === n && n === this.depth - 1) {\r\n                                errors.push(\r\n                                    Math.abs(\r\n                                        (triangleMatrix[n][m - 1].get(c.name)! -\r\n                                            triangleMatrix[n - 1][m - 1].get(c.name)!) /\r\n                                            ((n / (n - 1)) ** (2 * m) - 1),\r\n                                    ),\r\n                                );\r\n                            }\r\n                        }); //end forEach\r\n                        triangleMatrix[n][m] = Rnm;\r\n                    } //end elsif\r\n                } //end inner loop\r\n            } //end outer loop\r\n            this.error = errors.reduce((p, c) => p + c, 0) / errors.length;\r\n        } while (this.error > this.maxError); //end error control loop\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: triangleMatrix[triangleMatrix.length - 1][triangleMatrix[triangleMatrix.length - 1].length - 1],\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n\r\n    //modified midpoint method\r\n    modifiedMidpointMethod(variables: Map<string, number>, n: number) {\r\n        //stepSize == H\r\n        //h == H/n\r\n        var h = this.stepSize / n;\r\n        var interVariables = new Map(variables); //contains variables for intermediary steps\r\n        var midpoints: Map<string, number[]> = new Map();\r\n        var lastPoint: Map<string, number> = new Map();\r\n\r\n        //z0 == yn == current state\r\n        //z1 = z0 + h * f(x, z0)\r\n        this.model.compartments.forEach((c) => {\r\n            var k = this.evaluateExpression(c.ODE, interVariables);\r\n            var z1 = c.value[c.value.length - 1] + h * k;\r\n\r\n            interVariables.set(c.name, z1);\r\n            midpoints.set(c.name, [c.value[c.value.length - 1], z1]);\r\n        });\r\n\r\n        //zm+1 = zm−1 + 2h ∗ f(x + m ∗ h, zm) with m = 1, 2, ..., n − 1\r\n        for (let m = 1; m < n; m++) {\r\n            this.model.compartments.forEach((c) => {\r\n                var k = this.evaluateExpression(c.ODE, interVariables);\r\n                var zm1 = midpoints.get(c.name)![m - 1] + 2 * h * k;\r\n\r\n                interVariables.set(c.name, zm1);\r\n                midpoints.get(c.name)!.push(zm1);\r\n            });\r\n        }\r\n\r\n        //y(x + H) ≈ yn ≡ 1/2*(zn + zn−1 + h ∗ f(x + H, zn))\r\n        this.model.compartments.forEach((c) => {\r\n            var k = this.evaluateExpression(c.ODE, interVariables);\r\n            var zm = (1 / 2) * (midpoints.get(c.name)![n] + midpoints.get(c.name)![n - 1] + h * k);\r\n            lastPoint.set(c.name, zm);\r\n        });\r\n        return lastPoint;\r\n    }\r\n}\r\n","export class CsvDataService {\r\n    static exportToCsv(filename: string, data: [any[]]) {\r\n        const separator = \",\";\r\n        const csvContent = data\r\n            .map((row) => {\r\n                return row.join(separator);\r\n            })\r\n            .join(\"\\n\");\r\n\r\n        const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n        if (navigator.msSaveBlob) {\r\n            // IE 10+\r\n            navigator.msSaveBlob(blob, filename);\r\n        } else {\r\n            const link = document.createElement(\"a\");\r\n            if (link.download !== undefined) {\r\n                // Browsers that support HTML5 download attribute\r\n                const url = URL.createObjectURL(blob);\r\n                link.setAttribute(\"href\", url);\r\n                link.setAttribute(\"download\", filename);\r\n                link.style.visibility = \"hidden\";\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nimport \"./Chart.css\";\r\nimport { CsvDataService } from \"./CSVDataService\";\r\nimport { CModel } from \"./Types\";\r\n\r\ninterface IProps {\r\n    model: CModel;\r\n    timeSteps: number[];\r\n    currentTick: number;\r\n}\r\n\r\ninterface IState {\r\n    data: [any[]];\r\n}\r\n\r\nexport default class MyChart extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        var data = this.generateData();\r\n        this.state = {\r\n            data: data,\r\n        };\r\n    }\r\n\r\n    generateData() {\r\n        var header: any[] = [\"x\"];\r\n        this.props.model.compartments.forEach((c) => header.push(c.name));\r\n\r\n        var data: [any[]] = [header];\r\n\r\n        for (let i = 0; i <= this.props.currentTick; i++) {\r\n            var dataPoint = [this.props.timeSteps[i]];\r\n            this.props.model.compartments.forEach((c) => dataPoint.push(c.value[i]));\r\n            data.push(dataPoint);\r\n        }\r\n        //console.log(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    onClickGetData = () => {\r\n        CsvDataService.exportToCsv(\"data.csv\", this.state.data);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart\">\r\n                Chart\r\n                <Chart\r\n                    width={\"600px\"}\r\n                    height={\"400px\"}\r\n                    chartType=\"LineChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={this.state.data}\r\n                    options={{\r\n                        hAxis: {\r\n                            title: \"Time\",\r\n                        },\r\n                        vAxis: {\r\n                            title: \"Value\",\r\n                        },\r\n                    }}\r\n                    rootProps={{ \"data-testid\": \"2\" }}\r\n                />\r\n                <button onClick={this.onClickGetData}>Get Data</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ForceGraph2D, { NodeObject } from \"react-force-graph-2d\";\r\n\r\nimport \"./Graph.css\";\r\nimport { CModel } from \"./Types\";\r\n\r\ninterface NodeType extends NodeObject {\r\n    value: number;\r\n}\r\n\r\ninterface IProps {\r\n    model: CModel;\r\n}\r\n\r\ninterface IState {\r\n    data: { nodes: { id: string; value: number }[]; links: { source: string; target: string }[] };\r\n}\r\n\r\nexport default class Graph extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        var data = this.generateInitialDataStructure();\r\n        //console.log(data);\r\n\r\n        this.state = {\r\n            data: data,\r\n        };\r\n    }\r\n\r\n    generateInitialDataStructure() {\r\n        var node: { id: string; value: number }[] = [];\r\n        this.props.model.compartments.forEach((c) => {\r\n            node.push({ id: c.name, value: c.value[c.value.length - 1] });\r\n        });\r\n        var link: { source: string; target: string }[] = [];\r\n        this.props.model.compartments.forEach((c) => {\r\n            c.ODE.symbols().forEach((sym) => link.push({ source: c.name, target: sym }));\r\n        });\r\n        return { nodes: node, links: link };\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    onClick() {}\r\n\r\n    getRandomInt = (max: number) => {\r\n        return Math.floor(Math.random() * max);\r\n    };\r\n\r\n    nodePaint = (node: NodeObject, ctx: CanvasRenderingContext2D) => {\r\n        ctx.fillStyle =\r\n            \"#\" +\r\n            (\r\n                (node\r\n                    .id!.toString()\r\n                    .split(\"\")\r\n                    .map((x) => x.codePointAt(0)!)\r\n                    .reduce((a, b) => a + b) *\r\n                    1234567) %\r\n                Math.pow(2, 24)\r\n            )\r\n                .toString(16)\r\n                .padStart(6, \"0\");\r\n        ctx.beginPath();\r\n        ctx.arc(node.x!, node.y!, 10, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.font = \"10px Sans-Serif\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.fillText(node.id!.toString(), node.x!, node.y!);\r\n        // text\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"graph\">\r\n                Graph\r\n                <ForceGraph2D\r\n                    graphData={this.state.data}\r\n                    nodeLabel=\"value\"\r\n                    nodeCanvasObject={(node, ctx) => this.nodePaint(node, ctx)}\r\n                    width={500}\r\n                    height={500}\r\n                />\r\n                {\r\n                    //<button onClick={this.onClick.bind(this)}>Test</button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./ParserModule.css\";\r\nimport { CModel } from \"./Types\";\r\nimport { Parser, generate } from \"peggy\";\r\nimport * as config from \"./config.json\";\r\n\r\nconst Evaluator = require(\"expr-eval\").Parser;\r\n\r\nconst modelGrammar = `{{\r\nfunction makeFloat(o) {\r\n    return parseFloat(o.join(\"\"), 10);\r\n}\r\n}}\r\n\r\nmodel = parameters:parameter* _ compartments:compartment+ {return {parameters, compartments};}\r\ncompartment = \"comp\" _ name:ident _ value:value _ ODE:calc _ {return {name, value:[value], ODE};}\r\nparameter = \"param\" _ name:ident _ value:value _ {return {name, value};}\r\nident = ident:[A-Za-z]+ {return ident.join(\"\")}\r\nvalue = digits:[0-9.]+ {return makeFloat(digits);}\r\n_ \"whitespace\" = [ \\\\t\\\\n\\\\r]*\r\ncalc = \"{\" calc:[^}]* \"}\" {return calc.join(\"\")}`;\r\n\r\ninterface IProps {\r\n    setNewModel: (newModel: CModel) => void;\r\n}\r\n\r\ninterface ParseError {\r\n    hasError: boolean;\r\n    message: string;\r\n    location: string;\r\n}\r\n\r\ninterface IState {\r\n    value: string;\r\n    parser: Parser;\r\n    error: ParseError;\r\n    loadedModel: boolean;\r\n    selectedModel: number;\r\n    customModels: { name: string; value: string }[];\r\n}\r\n\r\nexport default class ParserModule extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        var retrievedModels = localStorage.getItem(\"savedModels\");\r\n        this.state = {\r\n            value: \"\",\r\n            parser: generate(modelGrammar),\r\n            error: { hasError: false, message: \"\", location: \"\" },\r\n            loadedModel: false,\r\n            selectedModel: 0,\r\n            customModels: retrievedModels ? JSON.parse(retrievedModels) : [],\r\n        };\r\n    }\r\n\r\n    //Parse Model\r\n    onLoadModel = (event: any) => {\r\n        //parse Input\r\n        try {\r\n            var model: CModel = this.state.parser.parse(this.state.value);\r\n            //insert constants\r\n            var constants = new Map();\r\n            model.parameters.forEach((p) => constants.set(p.name, p.value));\r\n            model.compartments.forEach((c) => (c.ODE = Evaluator.parse(c.ODE).simplify(Object.fromEntries(constants))));\r\n            //set model\r\n            this.props.setNewModel(model);\r\n            //error control\r\n            this.setState({ error: { hasError: false, message: \"\", location: \"\" } });\r\n\r\n            var variables = new Map();\r\n            model.compartments.forEach((p) => variables.set(p.name, p.value[0]));\r\n            model.compartments.forEach((c) => {\r\n                try {\r\n                    c.ODE.evaluate(Object.fromEntries(variables));\r\n                } catch (error) {\r\n                    this.setState({ error: { hasError: true, message: error.message, location: \"ODE for \" + c.name } });\r\n                    console.log(error);\r\n                }\r\n            });\r\n            this.setState({ loadedModel: true });\r\n        } catch (error) {\r\n            if (error.location !== undefined)\r\n                this.setState({\r\n                    error: {\r\n                        hasError: true,\r\n                        message: error.message,\r\n                        location:\r\n                            \"at line: \" + error.location.start.line + \" at column: \" + error.location.start.column,\r\n                    },\r\n                });\r\n            console.log(error);\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    handleChange(event: any) {\r\n        this.setState({ value: event.target.value, selectedModel: 0 });\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleSelectedModel = (event: any) => {\r\n        this.setState({\r\n            selectedModel: event.target.value,\r\n            value: config.models.concat(this.state.customModels)[event.target.value].value,\r\n        });\r\n    };\r\n\r\n    onSaveModel = () => {\r\n        this.state.customModels.push({\r\n            name: \"Custom Model \" + this.state.customModels.length,\r\n            value: this.state.value,\r\n        });\r\n        localStorage.setItem(\"savedModels\", JSON.stringify(this.state.customModels));\r\n        this.setState({ selectedModel: this.state.customModels.length + 1 });\r\n    };\r\n\r\n    renderError() {\r\n        if (this.state.error.hasError) {\r\n            return (\r\n                <div>\r\n                    Error: {this.state.error.message} at {this.state.error.location}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    generateDropdownOptions() {\r\n        var options: any[] = [];\r\n        config.models.concat(this.state.customModels).forEach((model, i) =>\r\n            options.push(\r\n                <option key={i} value={i}>\r\n                    {model.name}\r\n                </option>,\r\n            ),\r\n        );\r\n\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        var error = this.renderError();\r\n\r\n        return (\r\n            <div className=\"parser\">\r\n                {config.writeModelTitle}: <a href=\"https://github.com/NeverfullD/cmv\">{config.howToWriteModelTitle}</a>\r\n                <br />\r\n                {config.loadModelTitle}:{\" \"}\r\n                <select value={this.state.selectedModel} onChange={this.handleSelectedModel}>\r\n                    {this.generateDropdownOptions()}\r\n                </select>\r\n                <br />\r\n                <textarea\r\n                    className=\"parserText\"\r\n                    placeholder={config.modelTextAreaPlaceholder}\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange.bind(this)}\r\n                />\r\n                <br />\r\n                <button onClick={this.onLoadModel}>\r\n                    {this.state.loadedModel ? config.reloadModelButton : config.loadModelButton}\r\n                </button>\r\n                <button onClick={this.onSaveModel}>{config.saveModelButton}</button>\r\n                <br />\r\n                {error}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Settings.css\";\r\nimport * as config from \"./config.json\";\r\n\r\ninterface IProps {\r\n    onSimulate: (n: number) => void;\r\n    changeStepSize: (stepSize: number) => void;\r\n    changeMaxError: (maxError: number) => void;\r\n    stepSize: number;\r\n    maxError: number;\r\n    selectedSolver: string;\r\n    changeSelectedSolver: (selectedSolver: string) => void;\r\n}\r\n\r\ninterface IState {\r\n    steps: string;\r\n    stepSize: string;\r\n    maxError: string;\r\n}\r\n\r\nexport default class Settings extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = { steps: \"\", stepSize: props.stepSize.toString(), maxError: props.maxError.toString() };\r\n    }\r\n\r\n    onSimulate1 = () => {\r\n        this.props.onSimulate(1);\r\n    };\r\n    onSimulate10 = () => {\r\n        this.props.onSimulate(10);\r\n    };\r\n    onSimulate100 = () => {\r\n        this.props.onSimulate(100);\r\n    };\r\n    onSimulate = () => {\r\n        this.props.onSimulate(parseInt(this.state.steps));\r\n    };\r\n\r\n    handleChangeSteps = (event: any) => {\r\n        this.setState({ steps: event.target.value });\r\n    };\r\n\r\n    onChangeStepSize = () => {\r\n        this.props.changeStepSize(parseFloat(this.state.stepSize));\r\n    };\r\n    handleChangeStepSize = (event: any) => {\r\n        this.setState({ stepSize: event.target.value });\r\n    };\r\n\r\n    onChangeMaxError = () => {\r\n        this.props.changeMaxError(parseFloat(this.state.maxError));\r\n    };\r\n    handleChangeMaxError = (event: any) => {\r\n        this.setState({ maxError: event.target.value });\r\n    };\r\n\r\n    handleSelectedSolver = (event: any) => {\r\n        this.props.changeSelectedSolver(event.target.value);\r\n    };\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        var settings;\r\n\r\n        if (\r\n            this.props.selectedSolver === \"euler\" ||\r\n            this.props.selectedSolver === \"rungeKutta2\" ||\r\n            this.props.selectedSolver === \"rungeKutta4\"\r\n        ) {\r\n            settings = [\r\n                <br />,\r\n                <input type=\"text\" value={this.state.stepSize} onChange={this.handleChangeStepSize} />,\r\n                <button onClick={this.onChangeStepSize}>{config.setStepSizeButton}</button>,\r\n            ];\r\n        } else if (\r\n            this.props.selectedSolver === \"rungeKutta4Automatic\" ||\r\n            this.props.selectedSolver === \"bulirschStoer\"\r\n        ) {\r\n            settings = [\r\n                <br />,\r\n                <input type=\"text\" value={this.state.maxError} onChange={this.handleChangeMaxError} />,\r\n                <button onClick={this.onChangeMaxError}>{config.setMaxErrorButton}</button>,\r\n            ];\r\n        }\r\n\r\n        return (\r\n            <div className=\"settings\">\r\n                <div>\r\n                    {config.solverTitle}\r\n                    <br />\r\n                    <select value={this.props.selectedSolver} onChange={this.handleSelectedSolver}>\r\n                        <option value=\"euler\">Euler</option>\r\n                        <option value=\"rungeKutta2\">Runge-Kutta 2.Order</option>\r\n                        <option value=\"rungeKutta4\">Runge-Kutta 4.Order</option>\r\n                        <option value=\"rungeKutta4Automatic\">Runge-Kutta 4.Order Automatic</option>\r\n                        <option value=\"bulirschStoer\">Bulirsch-Stoer</option>\r\n                    </select>\r\n                    {settings}\r\n                </div>\r\n                <div>\r\n                    {config.timeControlTitle}\r\n                    <br />\r\n                    <button onClick={this.onSimulate1}>{config.simulateForButton} 1</button>\r\n                    <button onClick={this.onSimulate10}>10</button>\r\n                    <button onClick={this.onSimulate100}>100</button>\r\n                    <br />\r\n                    <button onClick={this.onSimulate}>{config.simulateForButton} </button>\r\n                    <input type=\"text\" value={this.state.steps} onChange={this.handleChangeSteps} />\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { CModel } from \"./Types\";\r\nimport {\r\n    BulirschStoerMethod,\r\n    EulerMethod,\r\n    Result,\r\n    RungeKutta2Method,\r\n    RungeKutta4AutomaticMethod,\r\n    RungeKutta4Method,\r\n    Solver,\r\n} from \"./Solver\";\r\nimport MyChart from \"./Chart\";\r\nimport Graph from \"./Graph\";\r\nimport ParserModule from \"./ParserModule\";\r\nimport Settings from \"./Settings\";\r\nimport * as config from \"./config.json\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {\r\n    model: CModel;\r\n    timeSteps: number[];\r\n    currentTick: number;\r\n    stepSize: number;\r\n    maxError: number;\r\n    solver: Solver;\r\n    selectedSolver: string;\r\n}\r\n\r\nexport default class Main extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            model: { parameters: [], compartments: [] },\r\n            currentTick: -1,\r\n            timeSteps: [],\r\n            stepSize: 0.1,\r\n            maxError: 0.001,\r\n            solver: new EulerMethod(0, 0, { parameters: [], compartments: [] }),\r\n            selectedSolver: \"euler\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    onClick = () => {\r\n        //console.log(this.state);\r\n        console.log(config);\r\n    };\r\n\r\n    //handle Settings\r\n    setModel = (newModel: CModel) => {\r\n        this.setState({\r\n            model: newModel,\r\n            currentTick: 0,\r\n            timeSteps: [0],\r\n            solver: this.getSolver(this.state.selectedSolver, 0, newModel),\r\n        });\r\n    };\r\n\r\n    onSimulate = (n: number) => {\r\n        this.solveTime(n);\r\n    };\r\n\r\n    changeStepSize = (stepSize: number) => {\r\n        this.setState({ stepSize: stepSize });\r\n    };\r\n\r\n    changeMaxError = (maxError: number) => {\r\n        this.setState({ maxError: maxError });\r\n    };\r\n\r\n    changeSelectedSolver = (selectedSolver: string) => {\r\n        this.setState({\r\n            selectedSolver: selectedSolver,\r\n            solver: this.getSolver(\r\n                selectedSolver,\r\n                this.state.timeSteps[this.state.timeSteps.length - 1],\r\n                this.state.model,\r\n            ),\r\n        });\r\n    };\r\n\r\n    getSolver(selectedSolver: string, timeStep: number, model: CModel): Solver {\r\n        switch (selectedSolver) {\r\n            case \"euler\":\r\n                return new EulerMethod(this.state.stepSize, timeStep, model);\r\n            case \"rungeKutta2\":\r\n                return new RungeKutta2Method(this.state.stepSize, timeStep, model);\r\n            case \"rungeKutta4\":\r\n                return new RungeKutta4Method(this.state.stepSize, timeStep, model);\r\n            case \"rungeKutta4Automatic\":\r\n                return new RungeKutta4AutomaticMethod(this.state.stepSize, timeStep, model, this.state.maxError);\r\n            case \"bulirschStoer\":\r\n                return new BulirschStoerMethod(this.state.stepSize, timeStep, model, 4, this.state.maxError);\r\n            default:\r\n                return new EulerMethod(this.state.stepSize, timeStep, model);\r\n        }\r\n    }\r\n\r\n    //simulation Core\r\n    applyResult(res: Result) {\r\n        this.state.model.compartments.forEach((c) => {\r\n            c.value.push(res.result.get(c.name)!);\r\n        });\r\n        //save Timestamps for variable step size\r\n        this.state.timeSteps.push(res.timeStep);\r\n    }\r\n\r\n    //Main for solvers\r\n    solveTime(time: number) {\r\n        var steps = 0;\r\n        var endTime = this.state.timeSteps[this.state.timeSteps.length - 1] + time;\r\n        while (this.state.timeSteps[this.state.timeSteps.length - 1] < endTime) {\r\n            //calculate Step\r\n            this.applyResult(this.state.solver.execute());\r\n            steps++;\r\n        }\r\n        //endCurrentTick\r\n        this.setState({ currentTick: this.state.currentTick + steps });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.onClick}>Test</button>\r\n                <h2>{config.title}</h2>\r\n                <ParserModule setNewModel={this.setModel} />\r\n                <Settings\r\n                    onSimulate={this.onSimulate}\r\n                    changeStepSize={this.changeStepSize}\r\n                    changeMaxError={this.changeMaxError}\r\n                    stepSize={this.state.stepSize}\r\n                    maxError={this.state.maxError}\r\n                    selectedSolver={this.state.selectedSolver}\r\n                    changeSelectedSolver={this.changeSelectedSolver}\r\n                />\r\n                <MyChart\r\n                    model={this.state.model}\r\n                    timeSteps={this.state.timeSteps}\r\n                    currentTick={this.state.currentTick}\r\n                    key={this.state.currentTick + \"chart\"}\r\n                />\r\n                <Graph model={this.state.model} key={this.state.currentTick + \"graph\"} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}