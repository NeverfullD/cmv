{"version":3,"sources":["Chart.tsx","Graph.tsx","Parser.tsx","Settings.tsx","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["Chart","props","className","React","Component","Graph","Parser","Settings","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAOqBA,E,kDACjB,WAAYC,GAAgB,uCAClBA,G,qDAGV,c,oBAEA,WACI,OAAO,qBAAKC,UAAU,QAAf,uB,GARoBC,IAAMC,WCApBC,G,wDACjB,WAAYJ,GAAgB,uCAClBA,G,qDAGV,c,oBAEA,WACI,OAAO,qBAAKC,UAAU,QAAf,uB,GARoBC,IAAMC,YCApBE,G,wDACjB,WAAYL,GAAgB,uCAClBA,G,qDAGV,c,oBAEA,WACI,OAAO,qBAAKC,UAAU,SAAf,wB,GARqBC,IAAMC,YCArBG,G,wDACjB,WAAYN,GAAgB,uCAClBA,G,qDAGV,c,oBAEA,WACI,OAAO,qBAAKC,UAAU,WAAf,0B,GARuBC,IAAMC,YCGvBI,E,kDACjB,WAAYP,GAAgB,uCAClBA,G,qDAGV,c,oBAEA,WACI,OACI,uCAEI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAdkBE,IAAMC,WCIzBK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.6d065e23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Chart.css\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport default class Chart extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return <div className=\"chart\">Chart</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Graph.css\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport default class Graph extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return <div className=\"graph\">Graph</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Parser.css\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport default class Parser extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return <div className=\"parser\">Parser</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Settings.css\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport default class Settings extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return <div className=\"settings\">Settings</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport Graph from \"./Graph\";\r\nimport Parser from \"./Parser\";\r\nimport Settings from \"./Settings\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport default class Main extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Test\r\n                <Parser />\r\n                <Settings />\r\n                <Chart />\r\n                <Graph />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}