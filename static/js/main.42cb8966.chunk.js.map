{"version":3,"sources":["Solver.ts","ChartModule.tsx","GraphModule.tsx","ParserModule.tsx","CSVDataService.ts","SettingsModule.tsx","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["SolverType","Solver","stepSize","timeStep","model","solverType","this","exp","variables","evaluate","Object","fromEntries","Map","compartments","forEach","c","set","name","value","length","EulerMethod","manualStepSize","generateVariables","res","k","evaluateExpression","ODE","result","RungeKutta2Method","interVariables","k1","k2","RungeKutta4Base","allK","get","push","k3","k4","RungeKutta4Method","calculateStep","RungeKutta4AutomaticMethod","maxError","errorControlled","error","errors","resOneStep","resTwoStep","Array","from","values","v","i","Math","abs","reduce","p","BulirschStoerMethod","depth","maxDepth","triangleMatrix","n","m","modifiedMidpointMethod","Rnm","val","h","midpoints","lastPoint","z1","zm1","zm","ChartModule","renderChart","width","height","chartType","loader","data","props","options","hAxis","title","vAxis","className","config","currentTick","React","Component","GraphModule","getRandomInt","max","floor","random","nodePaint","node","ctx","fillStyle","id","toString","split","map","x","codePointAt","a","b","pow","padStart","beginPath","arc","y","PI","fill","font","textAlign","textBaseline","fillText","generateInitialDataStructure","state","link","symbols","sym","source","target","nodes","links","graphData","nodeLabel","nodeCanvasObject","Evaluator","require","Parser","ParserModule","onLoadModel","event","parser","parse","modelText","constants","parameters","simplify","setNewModel","setState","hasError","message","location","console","log","loadedModel","undefined","start","line","column","preventDefault","onChangeModelText","selectedModel","handleSelectedModel","concat","customModels","onSaveModel","localStorage","setItem","JSON","stringify","retrievedModels","getItem","generate","renderError","href","onChange","generateDropdownOptions","placeholder","onClick","CsvDataService","filename","csvContent","row","join","blob","Blob","type","navigator","msSaveBlob","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","SettingsModule","onSimulate1","onSimulate","onSimulate10","onSimulate100","parseFloat","time","handleChangeSteps","onChangeStepSize","changeStepSize","handleChangeStepSize","onChangeMaxError","changeMaxError","handleChangeMaxError","handleSelectedSolver","changeSelectedSolver","onGetData","exportToCsv","settings","selectedSolverType","selectedSolver","Main","setModel","newModel","timeSteps","solver","getSolver","solveTime","steps","endTime","applyResult","execute","header","dataPoint","generateData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"44BAQYA,E,qFAAAA,O,mCAAAA,I,sCAAAA,M,KAKL,IAAeC,EAAtB,WAMI,WAAYC,EAAkBC,EAAkBC,GAA0B,yBAL1EF,cAKyE,OAJzEC,cAIyE,OAHzEC,WAGyE,OAFhEC,gBAEgE,EACrEC,KAAKJ,SAAWA,EAChBI,KAAKH,SAAWA,EAChBG,KAAKF,MAAQA,EATrB,sDAcI,SAAmBG,EAAiBC,GAChC,OAAOD,EAAIE,SAASC,OAAOC,YAAYH,MAf/C,+BAkBI,WACI,IAAIA,EAAiC,IAAII,IAEzC,OADAN,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAAD,OAAOP,EAAUQ,IAAID,EAAEE,KAAMF,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,OAC/EX,MArBf,KAyBaY,EAAb,4MACIf,WAAaL,EAAWqB,eAD5B,6CAGI,WAAW,IAAD,OACFb,EAAYF,KAAKgB,oBACjBC,EAA2B,IAAIX,IAMnC,OALAN,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIS,EAAI,EAAKC,mBAAmBV,EAAEW,IAAKlB,GAAa,EAAKN,SACzDqB,EAAIP,IAAID,EAAEE,KAAMF,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,GAAKK,MAElDlB,KAAKH,SAAWG,KAAKH,SAAWG,KAAKJ,SAC9B,CACHyB,OAAQJ,EACRpB,SAAUG,KAAKH,cAb3B,GAAiCF,GAkBpB2B,EAAb,4MACIvB,WAAaL,EAAWqB,eAD5B,6CAGI,WAAW,IAAD,OACFb,EAAYF,KAAKgB,oBACjBC,EAA2B,IAAIX,IAC/BiB,EAAiB,IAAIjB,IAAIJ,GAW7B,OAVAF,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIe,EAAK,EAAKL,mBAAmBV,EAAEW,IAAKlB,IAAc,EAAKN,SAAW,GACtE2B,EAAeb,IAAID,EAAEE,KAAMF,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,GAAKW,MAG7DxB,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIgB,EAAK,EAAKN,mBAAmBV,EAAEW,IAAKG,GAAkB,EAAK3B,SAC/DqB,EAAIP,IAAID,EAAEE,KAAMF,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,GAAKY,MAElDzB,KAAKH,SAAWG,KAAKH,SAAWG,KAAKJ,SAC9B,CACHyB,OAAQJ,EACRpB,SAAUG,KAAKH,cAnB3B,GAAuCF,GAwBxB+B,E,mKACX,SAAcxB,EAAgCN,GAAmB,IAAD,OACxDqB,EAA2B,IAAIX,IAC/BiB,EAAiB,IAAIjB,IAAIJ,GACzByB,EAAO,IAAIrB,IAmCf,OAjCAN,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIe,EAAK,EAAKL,mBAAmBV,EAAEW,IAAKlB,GAAaN,EACrD2B,EAAeb,IAAID,EAAEE,KAAMT,EAAU0B,IAAInB,EAAEE,MAASa,EAAK,GACzDG,EAAKjB,IAAID,EAAEE,KAAM,CAACa,OAGtBxB,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIgB,EAAK,EAAKN,mBAAmBV,EAAEW,IAAKG,GAAkB3B,EAC1D2B,EAAeb,IAAID,EAAEE,KAAMT,EAAU0B,IAAInB,EAAEE,MAASc,EAAK,GACzDE,EAAKC,IAAInB,EAAEE,MAAMkB,KAAKJ,MAG1BzB,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIqB,EAAK,EAAKX,mBAAmBV,EAAEW,IAAKG,GAAkB3B,EAC1D2B,EAAeb,IAAID,EAAEE,KAAMT,EAAU0B,IAAInB,EAAEE,MAASmB,GACpDH,EAAKC,IAAInB,EAAEE,MAAMkB,KAAKC,MAG1B9B,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIsB,EAAK,EAAKZ,mBAAmBV,EAAEW,IAAKG,GAAkB3B,EAC1D+B,EAAKC,IAAInB,EAAEE,MAAMkB,KAAKE,MAG1B/B,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7BQ,EAAIP,IACAD,EAAEE,KACFT,EAAU0B,IAAInB,EAAEE,MACX,EAAI,EAAKgB,EAAKC,IAAInB,EAAEE,MAAM,GAC1B,EAAI,EAAKgB,EAAKC,IAAInB,EAAEE,MAAM,GAC1B,EAAI,EAAKgB,EAAKC,IAAInB,EAAEE,MAAM,GAC1B,EAAI,EAAKgB,EAAKC,IAAInB,EAAEE,MAAM,OAGhCM,M,GAvCwBtB,GA2C1BqC,EAAb,4MACIjC,WAAaL,EAAWqB,eAD5B,6CAGI,WACI,IAAIb,EAAYF,KAAKgB,oBAErB,OADAhB,KAAKH,SAAWG,KAAKH,SAAWG,KAAKJ,SAC9B,CACHyB,OAAQrB,KAAKiC,cAAc/B,EAAWF,KAAKJ,UAC3CC,SAAUG,KAAKH,cAR3B,GAAuC6B,GAa1BQ,EAAb,kDAMI,WAAYtC,EAAkBC,EAAkBC,EAAyBqC,GAAmB,IAAD,8BACvF,cAAMvC,EAAUC,EAAUC,IAN9BC,WAAaL,EAAW0C,gBAKmE,EAH3FC,WAG2F,IAF3FF,cAE2F,EAEvF,EAAKE,MAAQ,EACb,EAAKF,SAAWA,EAHuE,EAN/F,2CAYI,WACI,IAAIG,EAAmB,GACnBpC,EAAYF,KAAKgB,oBACrB,EAAG,CAGKhB,KAAKqC,MAAQrC,KAAKmC,SAAW,EAC7BnC,KAAKJ,SAA2B,EAAhBI,KAAKJ,SAGhBI,KAAKqC,MAAQrC,KAAKmC,WACvBnC,KAAKJ,SAAWI,KAAKJ,SAAW,GAEpC,IAAI2C,EAAavC,KAAKiC,cAAc/B,EAAWF,KAAKJ,UAChD4C,EAAaxC,KAAKiC,cAAcjC,KAAKiC,cAAc/B,EAAWF,KAAKJ,SAAW,GAAII,KAAKJ,SAAW,GAEtG6C,MAAMC,KAAKH,EAAWI,UAAUnC,SAAQ,SAACoC,EAAGC,GACxCP,EAAOT,KAAKiB,KAAKC,IAAIN,MAAMC,KAAKF,EAAWG,UAAUE,GAAKD,OAE9D5C,KAAKqC,MAAQC,EAAOU,QAAO,SAACC,EAAGxC,GAAJ,OAAUwC,EAAIxC,IAAG,GAAK6B,EAAOzB,aACnDb,KAAKqC,MAAQrC,KAAKmC,UAG3B,OADAnC,KAAKH,SAAWG,KAAKH,SAAWG,KAAKJ,SAC9B,CACHyB,OAAQmB,EACR3C,SAAUG,KAAKH,cArC3B,GAAgD6B,GA0CnCwB,EAAb,kDAQI,WAAYtD,EAAkBC,EAAkBC,EAAyBqD,EAAehB,GAAmB,IAAD,8BACtG,cAAMvC,EAAUC,EAAUC,IAR9BC,WAAaL,EAAW0C,gBAOkF,EAL1GC,WAK0G,IAJ1Gc,WAI0G,IAH1GhB,cAG0G,IAF1GiB,SAAW,EAIP,EAAKf,MAAQ,EACb,EAAKc,MAAQA,EACb,EAAKhB,SAAWA,EAJsF,EAR9G,2CAgBI,WAAW,IAAD,OACFjC,EAAYF,KAAKgB,oBACjBqC,EAA0C,GAG9C,EAAG,CAGKrD,KAAKqC,MAAQrC,KAAKmC,SAAW,EACzBnC,KAAKmD,MAAQ,EACbnD,KAAKmD,MAAQnD,KAAKmD,MAAQ,GAE1BnD,KAAKJ,SAA2B,EAAhBI,KAAKJ,SACrBI,KAAKmD,MAAQnD,KAAKmD,MAAQ,GAIzBnD,KAAKqC,MAAQrC,KAAKmC,WACnBnC,KAAKmD,MAAQnD,KAAKoD,SAClBpD,KAAKmD,MAAQnD,KAAKmD,MAAQ,GAE1BnD,KAAKJ,SAAWI,KAAKJ,SAAW,EAChCI,KAAKmD,MAAQnD,KAAKmD,MAAQ,IAKlC,IADA,IAAIb,EAAmB,GArBxB,WAsBUgB,GAELD,EAAeC,GAAK,GACpB,IAzBL,eAyBcC,GAEK,IAANA,EAEAF,EAAeC,GAAGC,GAAK,EAAKC,uBAAuBtD,EAAW,GAAKoD,EAAI,KAGnEG,EAA2B,IAAInD,IACnC,EAAKR,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIiD,EACAL,EAAeC,GAAGC,EAAI,GAAG3B,IAAInB,EAAEE,OAC9B0C,EAAeC,GAAGC,EAAI,GAAG3B,IAAInB,EAAEE,MAAS0C,EAAeC,EAAI,GAAGC,EAAI,GAAG3B,IAAInB,EAAEE,QACvE,SAAC2C,GAAKA,EAAI,GAAQ,EAAIC,GAAK,GACpCE,EAAI/C,IAAID,EAAEE,KAAM+C,GAIZH,IAAMD,GAAKA,IAAM,EAAKH,MAAQ,GAC9Bb,EAAOT,KACHiB,KAAKC,KACAM,EAAeC,GAAGC,EAAI,GAAG3B,IAAInB,EAAEE,MAC5B0C,EAAeC,EAAI,GAAGC,EAAI,GAAG3B,IAAInB,EAAEE,QAClC,SAAC2C,GAAKA,EAAI,GAAQ,EAAIC,GAAK,QAKhDF,EAAeC,GAAGC,GAAKE,IA3BtBF,EAAI,EAAGA,GAAKD,EAAGC,IAAM,EAArBA,IAHJD,EAAI,EAAGA,EAAItD,KAAKmD,MAAOG,IAAK,CAAC,IAUtBG,EAVqB,EAA5BH,GAkCTtD,KAAKqC,MAAQC,EAAOU,QAAO,SAACC,EAAGxC,GAAJ,OAAUwC,EAAIxC,IAAG,GAAK6B,EAAOzB,aACnDb,KAAKqC,MAAQrC,KAAKmC,UAE3B,OADAnC,KAAKH,SAAWG,KAAKH,SAAWG,KAAKJ,SAC9B,CACHyB,OAAQgC,EAAeA,EAAexC,OAAS,GAAGwC,EAAeA,EAAexC,OAAS,GAAGA,OAAS,GACrGhB,SAAUG,KAAKH,YAlF3B,oCAuFI,SAAuBK,EAAgCoD,GAAY,IAAD,OAG1DK,EAAI3D,KAAKJ,SAAW0D,EACpB/B,EAAiB,IAAIjB,IAAIJ,GACzB0D,EAAmC,IAAItD,IACvCuD,EAAiC,IAAIvD,IAIzCN,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIS,EAAI,EAAKC,mBAAmBV,EAAEW,IAAKG,GACnCuC,EAAKrD,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,GAAK8C,EAAIzC,EAE3CK,EAAeb,IAAID,EAAEE,KAAMmD,GAC3BF,EAAUlD,IAAID,EAAEE,KAAM,CAACF,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,GAAIiD,OAIxD,IAnB8D,eAmBrDP,GACL,EAAKzD,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIS,EAAI,EAAKC,mBAAmBV,EAAEW,IAAKG,GACnCwC,EAAMH,EAAUhC,IAAInB,EAAEE,MAAO4C,EAAI,GAAK,EAAII,EAAIzC,EAElDK,EAAeb,IAAID,EAAEE,KAAMoD,GAC3BH,EAAUhC,IAAInB,EAAEE,MAAOkB,KAAKkC,OAN3BR,EAAI,EAAGA,EAAID,EAAGC,IAAM,EAApBA,GAgBT,OALAvD,KAAKF,MAAMS,aAAaC,SAAQ,SAACC,GAC7B,IAAIS,EAAI,EAAKC,mBAAmBV,EAAEW,IAAKG,GACnCyC,EAAM,IAAUJ,EAAUhC,IAAInB,EAAEE,MAAO2C,GAAKM,EAAUhC,IAAInB,EAAEE,MAAO2C,EAAI,GAAKK,EAAIzC,GACpF2C,EAAUnD,IAAID,EAAEE,KAAMqD,MAEnBH,MA1Hf,GAAyClE,G,8BCtKpBsE,E,4MAGjBC,YAAc,WACV,OACI,cAAC,IAAD,CACIC,MAAO,OACPC,OAAQ,QACRC,UAAU,YACVC,OAAQ,gDACRC,KAAM,EAAKC,MAAMD,KACjBE,QAAS,CACLC,MAAO,CACHC,MAAO,QAEXC,MAAO,CACHD,MAAO,a,uDAf3B,c,oBAsBA,WACI,OACI,sBAAKE,UAAU,QAAf,UACKC,IACA9E,KAAKwE,MAAMO,YAAc,EACtB/E,KAAKkE,cAEL,gCACI,uBACCY,c,GAhCgBE,IAAMC,W,QCkB1BC,G,wDACjB,WAAYV,GAAgB,IAAD,uBACvB,cAAMA,IAuBVW,aAAe,SAACC,GACZ,OAAOtC,KAAKuC,MAAMvC,KAAKwC,SAAWF,IAzBX,EA4B3BG,UAAY,SAACC,EAAkBC,GAC3BA,EAAIC,UACA,KAOQ,QALHF,EACIG,GAAIC,WACJC,MAAM,IACNC,KAAI,SAACC,GAAD,OAAOA,EAAEC,YAAY,MACzBhD,QAAO,SAACiD,EAAGC,GAAJ,OAAUD,EAAIC,KAE1BpD,KAAKqD,IAAI,EAAG,KAEXP,SAAS,IACTQ,SAAS,EAAG,KACrBX,EAAIY,YACJZ,EAAIa,IAAId,EAAKO,EAAIP,EAAKe,EAAI,GAAI,EAAG,EAAIzD,KAAK0D,IAAI,GAC9Cf,EAAIgB,OACJhB,EAAIC,UAAY,UAChBD,EAAIiB,KAAO,kBACXjB,EAAIkB,UAAY,SAChBlB,EAAImB,aAAe,SACnBnB,EAAIoB,SAASrB,EAAKG,GAAIC,WAAYJ,EAAKO,EAAIP,EAAKe,IA9ChD,IAAIhC,EAAO,EAAKuC,+BAHO,OAKvB,EAAKC,MAAQ,CACTxC,KAAMA,GANa,E,gEAU3B,WACI,IAAIiB,EAAe,GACnBxF,KAAKwE,MAAM1E,MAAMS,aAAaC,SAAQ,SAACC,GACnC+E,EAAK3D,KAAK,CAAE8D,GAAIlF,EAAEE,KAAMC,MAAOH,EAAEG,MAAMH,EAAEG,MAAMC,OAAS,QAE5D,IAAImG,EAAe,GAInB,OAHAhH,KAAKwE,MAAM1E,MAAMS,aAAaC,SAAQ,SAACC,GACnCA,EAAEW,IAAI6F,UAAUzG,SAAQ,SAAC0G,GAAD,OAASF,EAAKnF,KAAK,CAAEsF,OAAQ1G,EAAEE,KAAMyG,OAAQF,UAElE,CAAEG,MAAO7B,EAAM8B,MAAON,K,+BAGjC,c,oBA+BA,WAAU,IAAD,OACL,OACI,sBAAKnC,UAAU,QAAf,UACKC,IACD,cAAC,IAAD,CACIyC,UAAWvH,KAAK+G,MAAMxC,KACtBiD,UAAU,QACVC,iBAAkB,SAACjC,EAAMC,GAAP,OAAe,EAAKF,UAAUC,EAAMC,IACtDtB,MAAO,IACPC,OAAQ,a,GA/DaY,IAAMC,Y,gBCxBzCyC,EAAYC,EAAQ,IAAaC,OAwClBC,E,kDACjB,WAAYrD,GAAgB,IAAD,uBACvB,cAAMA,IAaVsD,YAAc,SAACC,GAEX,IACI,IAAIjI,EAA0B,EAAKiH,MAAMiB,OAAOC,MAAM,EAAKlB,MAAMmB,WAE7DC,EAAY,IAAI7H,IACpBR,EAAMsI,WAAW5H,SAAQ,SAACyC,GAAD,OAAOkF,EAAUzH,IAAIuC,EAAEtC,KAAMsC,EAAErC,UACxDd,EAAMS,aAAaC,SAAQ,SAACC,GAAD,OAAQA,EAAEW,IAAMsG,EAAUO,MAAMxH,EAAEW,KAAKiH,SAASjI,OAAOC,YAAY8H,OAE9F,EAAK3D,MAAM8D,YAAYxI,GAEvB,EAAKyI,SAAS,CAAElG,MAAO,CAAEmG,UAAU,EAAOC,QAAS,GAAIC,SAAU,MAEjE,IAAIxI,EAAY,IAAII,IACpBR,EAAMS,aAAaC,SAAQ,SAACyC,GAAD,OAAO/C,EAAUQ,IAAIuC,EAAEtC,KAAMsC,EAAErC,MAAM,OAChEd,EAAMS,aAAaC,SAAQ,SAACC,GACxB,IACIA,EAAEW,IAAIjB,SAASC,OAAOC,YAAYH,IACpC,MAAOmC,GACL,EAAKkG,SAAS,CAAElG,MAAO,CAAEmG,UAAU,EAAMC,QAASpG,EAAMoG,QAASC,SAAU,WAAajI,EAAEE,QAC1FgI,QAAQC,IAAIvG,OAGpB,EAAKkG,SAAS,CAAEM,aAAa,IAC/B,MAAOxG,QACkByG,IAAnBzG,EAAMqG,UACN,EAAKH,SAAS,CACVlG,MAAO,CACHmG,UAAU,EACVC,QAASpG,EAAMoG,QACfC,SACI,YAAcrG,EAAMqG,SAASK,MAAMC,KAAO,eAAiB3G,EAAMqG,SAASK,MAAME,UAGhGN,QAAQC,IAAIvG,GAEhB0F,EAAMmB,kBAlDiB,EAqD3BC,kBAAoB,SAACpB,GACjB,EAAKQ,SAAS,CAAEL,UAAWH,EAAMX,OAAOxG,MAAOwI,cAAe,KAtDvC,EA2D3BC,oBAAsB,SAACtB,GACnB,EAAKQ,SAAS,CACVa,cAAerB,EAAMX,OAAOxG,MAC5BsH,UAAWpD,IAAcwE,OAAO,EAAKvC,MAAMwC,cAAcxB,EAAMX,OAAOxG,OAAOsH,aA9D1D,EAkE3BsB,YAAc,WACV,EAAKzC,MAAMwC,aAAa1H,KAAK,CACzBlB,KAAM,gBAAkB,EAAKoG,MAAMwC,aAAa1I,OAChDqH,UAAW,EAAKnB,MAAMmB,YAE1BuB,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,EAAK7C,MAAMwC,eAC9D,EAAKhB,SAAS,CAAEa,cAAe,EAAKrC,MAAMwC,aAAa1I,OAAS,KAtEhE,IAAIgJ,EAAkBJ,aAAaK,QAAQ,eAFpB,OAGvB,EAAK/C,MAAQ,CACTmB,UAAW,GACXF,OAAQ+B,mBA5CF,whBA6CN1H,MAAO,CAAEmG,UAAU,EAAOC,QAAS,GAAIC,SAAU,IACjDG,aAAa,EACbO,cAAe,EACfG,aAAcM,EAAkBF,KAAK1B,MAAM4B,GAAmB,IAT3C,E,qDAyD3B,c,yBAkBA,WACI,GAAI7J,KAAK+G,MAAM1E,MAAMmG,SACjB,OACI,0CACYxI,KAAK+G,MAAM1E,MAAMoG,QAD7B,OAC0CzI,KAAK+G,MAAM1E,MAAMqG,c,qCAMvE,WACI,IAAIjE,EAAiB,GASrB,OARAK,IAAcwE,OAAOtJ,KAAK+G,MAAMwC,cAAc/I,SAAQ,SAACV,EAAO+C,GAAR,OAClD4B,EAAQ5C,KACJ,wBAAgBjB,MAAOiC,EAAvB,SACK/C,EAAMa,MADEkC,OAMd4B,I,oBAGX,WACI,IAAIpC,EAAQrC,KAAKgK,cAEjB,OACI,sBAAKnF,UAAU,SAAf,UACKC,IADL,KAC8B,mBAAGmF,KAAK,oCAAR,SAA6CnF,MACvE,uBACCA,IAHL,IAG6B,IACzB,wBAAQlE,MAAOZ,KAAK+G,MAAMqC,cAAec,SAAUlK,KAAKqJ,oBAAxD,SACKrJ,KAAKmK,4BAEV,uBACA,0BACItF,UAAU,aACVuF,YAAatF,IACblE,MAAOZ,KAAK+G,MAAMmB,UAClBgC,SAAUlK,KAAKmJ,oBAEnB,uBACA,wBAAQkB,QAASrK,KAAK8H,YAAtB,SACK9H,KAAK+G,MAAM8B,YAAc/D,IAA2BA,MAEzD,wBAAQuF,QAASrK,KAAKwJ,YAAtB,SAAoC1E,MACpC,uBACCzC,S,GA3HyB2C,IAAMC,WC9CnCqF,G,MAAb,gGACI,SAAmBC,EAAkBhG,GACjC,IACMiG,EAAajG,EACduB,KAAI,SAAC2E,GACF,OAAOA,EAAIC,KAHD,QAKbA,KAAK,MAEJC,EAAO,IAAIC,KAAK,CAACJ,GAAa,CAAEK,KAAM,4BAC5C,GAAIC,UAAUC,WAEVD,UAAUC,WAAWJ,EAAMJ,OACxB,CACH,IAAMvD,EAAOgE,SAASC,cAAc,KACpC,QAAsBnC,IAAlB9B,EAAKkE,SAAwB,CAE7B,IAAMC,EAAMC,IAAIC,gBAAgBV,GAChC3D,EAAKsE,aAAa,OAAQH,GAC1BnE,EAAKsE,aAAa,WAAYf,GAC9BvD,EAAKuE,MAAMC,WAAa,SACxBR,SAASS,KAAKC,YAAY1E,GAC1BA,EAAK2E,QACLX,SAASS,KAAKG,YAAY5E,SAvB1C,MCwBqB6E,E,kDACjB,WAAYrH,GAAgB,IAAD,8BACvB,cAAMA,IAIVsH,YAAc,WACV,EAAKtH,MAAMuH,WAAW,IANC,EAQ3BC,aAAe,WACX,EAAKxH,MAAMuH,WAAW,KATC,EAW3BE,cAAgB,WACZ,EAAKzH,MAAMuH,WAAW,MAZC,EAc3BA,WAAa,WACT,EAAKvH,MAAMuH,WAAWG,WAAW,EAAKnF,MAAMoF,QAfrB,EAkB3BC,kBAAoB,SAACrE,GACjB,EAAKQ,SAAS,CAAE4D,KAAMpE,EAAMX,OAAOxG,SAnBZ,EAsB3ByL,iBAAmB,WACf,EAAK7H,MAAM8H,eAAeJ,WAAW,EAAKnF,MAAMnH,YAvBzB,EAyB3B2M,qBAAuB,SAACxE,GACpB,EAAKQ,SAAS,CAAE3I,SAAUmI,EAAMX,OAAOxG,SA1BhB,EA6B3B4L,iBAAmB,WACf,EAAKhI,MAAMiI,eAAeP,WAAW,EAAKnF,MAAM5E,YA9BzB,EAgC3BuK,qBAAuB,SAAC3E,GACpB,EAAKQ,SAAS,CAAEpG,SAAU4F,EAAMX,OAAOxG,SAjChB,EAoC3B+L,qBAAuB,SAAC5E,GACpB,EAAKvD,MAAMoI,qBAAqB7E,EAAMX,OAAOxG,QArCtB,EAwC3BiM,UAAY,WACRvC,EAAewC,YAAY,WAAY,EAAKtI,MAAMD,OAvClD,EAAKwC,MAAQ,CAAEoF,KAAM,GAAIvM,SAAU4E,EAAM5E,SAASgG,WAAYzD,SAAUqC,EAAMrC,SAASyD,YAFhE,E,qDA4C3B,c,oBAEA,WACI,IAAImH,EAgBJ,OAdI/M,KAAKwE,MAAMwI,qBAAuBtN,EAAWqB,eAC7CgM,EAAW,CACP,uBACA,uBAAOlC,KAAK,OAAOjK,MAAOZ,KAAK+G,MAAMnH,SAAUsK,SAAUlK,KAAKuM,uBAC9D,wBAAQlC,QAASrK,KAAKqM,iBAAtB,SAAyCvH,OAEtC9E,KAAKwE,MAAMwI,qBAAuBtN,EAAW0C,kBACpD2K,EAAW,CACP,uBACA,uBAAOlC,KAAK,OAAOjK,MAAOZ,KAAK+G,MAAM5E,SAAU+H,SAAUlK,KAAK0M,uBAC9D,wBAAQrC,QAASrK,KAAKwM,iBAAtB,SAAyC1H,QAK7C,sBAAKD,UAAU,WAAf,UACI,gCACKC,IACD,uBACA,yBAAQlE,MAAOZ,KAAKwE,MAAMyI,eAAgB/C,SAAUlK,KAAK2M,qBAAzD,UACI,wBAAQ/L,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,iCACA,wBAAQA,MAAM,cAAd,iCACA,wBAAQA,MAAM,uBAAd,2CACA,wBAAQA,MAAM,gBAAd,+BAEHmM,KAEL,gCACKjI,IACD,uBACA,yBAAQuF,QAASrK,KAAK8L,YAAtB,UAAoChH,IAApC,QACA,wBAAQuF,QAASrK,KAAKgM,aAAtB,gBACA,wBAAQ3B,QAASrK,KAAKiM,cAAtB,iBACA,uBACA,yBAAQ5B,QAASrK,KAAK+L,WAAtB,UAAmCjH,IAAnC,OACA,uBAAO+F,KAAK,OAAOjK,MAAOZ,KAAK+G,MAAMoF,KAAMjC,SAAUlK,KAAKoM,oBAC1D,0BAEJ,gCACKtH,IACD,uBACA,yBAAQuF,QAASrK,KAAK6M,UAAtB,UAAkC/H,IAAlC,OACA,iC,GA7FwBE,IAAMC,WCM7BiI,E,kDACjB,WAAY1I,GAAgB,IAAD,8BACvB,cAAMA,IAeV2I,SAAW,SAACC,GACR,EAAK7E,SAAS,CACVzI,MAAOsN,EACPrI,YAAa,EACbsI,UAAW,CAAC,GACZC,OAAQ,EAAKC,UAAU,EAAKxG,MAAMkG,eAAgB,EAAGG,MArBlC,EAyB3BrB,WAAa,SAACzI,GACV,EAAKkK,UAAUlK,IA1BQ,EA6B3BgJ,eAAiB,SAAC1M,GACd,EAAK2I,SAAS,CAAE3I,SAAUA,KA9BH,EAiC3B6M,eAAiB,SAACtK,GACd,EAAKoG,SAAS,CAAEpG,SAAUA,KAlCH,EAqC3ByK,qBAAuB,SAACK,GACpB,EAAK1E,SAAS,CACV0E,eAAgBA,EAChBK,OAAQ,EAAKC,UACTN,EACA,EAAKlG,MAAMsG,UAAU,EAAKtG,MAAMsG,UAAUxM,OAAS,GACnD,EAAKkG,MAAMjH,UAzCnB,EAAKiH,MAAQ,CACTjH,MAAO,CAAEsI,WAAY,GAAI7H,aAAc,IACvCwE,aAAc,EACdsI,UAAW,GACXzN,SAAU,GACVuC,SAAU,KACVmL,OAAQ,IAAIxM,EAAY,EAAG,EAAG,CAAEsH,WAAY,GAAI7H,aAAc,KAC9D0M,eAAgB,SATG,E,qDAa3B,c,uBAmCA,SAAUA,EAAwBpN,EAAkBC,GAChD,OAAQmN,GACJ,IAAK,QACD,OAAO,IAAInM,EAAYd,KAAK+G,MAAMnH,SAAUC,EAAUC,GAC1D,IAAK,cACD,OAAO,IAAIwB,EAAkBtB,KAAK+G,MAAMnH,SAAUC,EAAUC,GAChE,IAAK,cACD,OAAO,IAAIkC,EAAkBhC,KAAK+G,MAAMnH,SAAUC,EAAUC,GAChE,IAAK,uBACD,OAAO,IAAIoC,EAA2B,GAAKrC,EAAUC,EAAOE,KAAK+G,MAAM5E,UAC3E,IAAK,gBACD,OAAO,IAAIe,EAAoB,GAAKrD,EAAUC,EAAO,EAAGE,KAAK+G,MAAM5E,UACvE,QACI,OAAO,IAAIrB,EAAYd,KAAK+G,MAAMnH,SAAUC,EAAUC,M,yBAKlE,SAAYmB,GACRjB,KAAK+G,MAAMjH,MAAMS,aAAaC,SAAQ,SAACC,GACnCA,EAAEG,MAAMiB,KAAKZ,EAAII,OAAOO,IAAInB,EAAEE,UAGlCX,KAAK+G,MAAMsG,UAAUxL,KAAKZ,EAAIpB,Y,uBAIlC,SAAUsM,GAGN,IAFA,IAAIsB,EAAQ,EACRC,EAAU1N,KAAK+G,MAAMsG,UAAUrN,KAAK+G,MAAMsG,UAAUxM,OAAS,GAAKsL,EAC/DnM,KAAK+G,MAAMsG,UAAUrN,KAAK+G,MAAMsG,UAAUxM,OAAS,GAAK6M,GAE3D1N,KAAK2N,YAAY3N,KAAK+G,MAAMuG,OAAOM,WACnCH,IAGJzN,KAAKuI,SAAS,CAAExD,YAAa/E,KAAK+G,MAAMhC,YAAc0I,M,0BAG1D,WAAgB,IAAD,OACPI,EAAgB,CAAC,KACrB7N,KAAK+G,MAAMjH,MAAMS,aAAaC,SAAQ,SAACC,GAAD,OAAOoN,EAAOhM,KAAKpB,EAAEE,SAI3D,IAFA,IAAI4D,EAAgB,CAACsJ,GAJV,WAMFhL,GACDiL,EAAY,CAAC,EAAK/G,MAAMsG,UAAUxK,IACtC,EAAKkE,MAAMjH,MAAMS,aAAaC,SAAQ,SAACC,GAAD,OAAOqN,EAAUjM,KAAKpB,EAAEG,MAAMiC,OACpE0B,EAAK1C,KAAKiM,IAHLjL,EAAI,EAAGA,GAAK7C,KAAK+G,MAAMhC,YAAalC,IAAK,CAAC,IAC3CiL,EAD0C,EAAzCjL,GAKT,OAAO0B,I,oBAGX,WACI,IAAIA,EAAOvE,KAAK+N,eAEhB,OACI,sBAAKlJ,UAAU,OAAf,UACI,6BAAKC,MACL,cAAC,EAAD,CAAcwD,YAAatI,KAAKmN,WAChC,cAAC,EAAD,CAAarN,MAAOE,KAAK+G,MAAMjH,OAAYE,KAAK+G,MAAMhC,YAAc,SACpE,cAAC,EAAD,CACIgH,WAAY/L,KAAK+L,WACjBO,eAAgBtM,KAAKsM,eACrBG,eAAgBzM,KAAKyM,eACrB7M,SAAUI,KAAK+G,MAAMnH,SACrBuC,SAAUnC,KAAK+G,MAAM5E,SACrB8K,eAAgBjN,KAAK+G,MAAMkG,eAC3BD,mBAAoBhN,KAAK+G,MAAMuG,OAAOvN,WACtC6M,qBAAsB5M,KAAK4M,qBAC3BrI,KAAMA,IAEV,cAAC,EAAD,CAAaA,KAAMA,EAAMQ,YAAa/E,KAAK+G,MAAMhC,aAAkB/E,KAAK+G,MAAMhC,YAAc,gB,GAzH1EC,IAAMC,WChBzB+I,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ3D,SAAS4D,eAAe,SAM5BZ,M","file":"static/js/main.42cb8966.chunk.js","sourcesContent":["import { Expression } from \"expr-eval\";\r\nimport { CompartmentModel } from \"./Types\";\r\n\r\nexport interface Result {\r\n    result: Map<string, number>;\r\n    timeStep: number;\r\n}\r\n\r\nexport enum SolverType {\r\n    manualStepSize,\r\n    errorControlled,\r\n}\r\n\r\nexport abstract class Solver {\r\n    stepSize: number;\r\n    timeStep: number;\r\n    model: CompartmentModel;\r\n    abstract solverType: SolverType;\r\n\r\n    constructor(stepSize: number, timeStep: number, model: CompartmentModel) {\r\n        this.stepSize = stepSize;\r\n        this.timeStep = timeStep;\r\n        this.model = model;\r\n    }\r\n\r\n    abstract execute(): Result;\r\n\r\n    evaluateExpression(exp: Expression, variables: Map<string, number>): number {\r\n        return exp.evaluate(Object.fromEntries(variables));\r\n    }\r\n\r\n    generateVariables() {\r\n        var variables: Map<string, number> = new Map();\r\n        this.model.compartments.forEach((c) => variables.set(c.name, c.value[c.value.length - 1]));\r\n        return variables;\r\n    }\r\n}\r\n\r\nexport class EulerMethod extends Solver {\r\n    solverType = SolverType.manualStepSize;\r\n\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        var res: Map<string, number> = new Map();\r\n        this.model.compartments.forEach((c) => {\r\n            var k = this.evaluateExpression(c.ODE, variables) * this.stepSize;\r\n            res.set(c.name, c.value[c.value.length - 1] + k);\r\n        });\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: res,\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nexport class RungeKutta2Method extends Solver {\r\n    solverType = SolverType.manualStepSize;\r\n\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        var res: Map<string, number> = new Map();\r\n        var interVariables = new Map(variables); //contains variable values at half point of the step\r\n        this.model.compartments.forEach((c) => {\r\n            var k1 = this.evaluateExpression(c.ODE, variables) * (this.stepSize / 2);\r\n            interVariables.set(c.name, c.value[c.value.length - 1] + k1);\r\n        });\r\n\r\n        this.model.compartments.forEach((c) => {\r\n            var k2 = this.evaluateExpression(c.ODE, interVariables) * this.stepSize;\r\n            res.set(c.name, c.value[c.value.length - 1] + k2);\r\n        });\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: res,\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nabstract class RungeKutta4Base extends Solver {\r\n    calculateStep(variables: Map<string, number>, stepSize: number) {\r\n        var res: Map<string, number> = new Map();\r\n        var interVariables = new Map(variables); //contains variables for intermediary steps\r\n        var allK = new Map();\r\n        //calc k1\r\n        this.model.compartments.forEach((c) => {\r\n            var k1 = this.evaluateExpression(c.ODE, variables) * stepSize;\r\n            interVariables.set(c.name, variables.get(c.name)! + k1 / 2);\r\n            allK.set(c.name, [k1]);\r\n        });\r\n        //calc k2\r\n        this.model.compartments.forEach((c) => {\r\n            var k2 = this.evaluateExpression(c.ODE, interVariables) * stepSize;\r\n            interVariables.set(c.name, variables.get(c.name)! + k2 / 2);\r\n            allK.get(c.name).push(k2);\r\n        });\r\n        //calc k3\r\n        this.model.compartments.forEach((c) => {\r\n            var k3 = this.evaluateExpression(c.ODE, interVariables) * stepSize;\r\n            interVariables.set(c.name, variables.get(c.name)! + k3);\r\n            allK.get(c.name).push(k3);\r\n        });\r\n        //calc k4\r\n        this.model.compartments.forEach((c) => {\r\n            var k4 = this.evaluateExpression(c.ODE, interVariables) * stepSize;\r\n            allK.get(c.name).push(k4);\r\n        });\r\n        //calc y_n+1\r\n        this.model.compartments.forEach((c) => {\r\n            res.set(\r\n                c.name,\r\n                variables.get(c.name)! +\r\n                    (1 / 6) * allK.get(c.name)[0] + //k1\r\n                    (2 / 6) * allK.get(c.name)[1] + //k2\r\n                    (2 / 6) * allK.get(c.name)[2] + //k3\r\n                    (1 / 6) * allK.get(c.name)[3], //k4\r\n            );\r\n        });\r\n        return res;\r\n    }\r\n}\r\n\r\nexport class RungeKutta4Method extends RungeKutta4Base {\r\n    solverType = SolverType.manualStepSize;\r\n\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: this.calculateStep(variables, this.stepSize),\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nexport class RungeKutta4AutomaticMethod extends RungeKutta4Base {\r\n    solverType = SolverType.errorControlled;\r\n\r\n    error: number;\r\n    maxError: number;\r\n\r\n    constructor(stepSize: number, timeStep: number, model: CompartmentModel, maxError: number) {\r\n        super(stepSize, timeStep, model);\r\n        this.error = 0;\r\n        this.maxError = maxError;\r\n    }\r\n\r\n    execute() {\r\n        var errors: number[] = [];\r\n        var variables = this.generateVariables();\r\n        do {\r\n            //error control handling\r\n            //small error increase stepSize\r\n            if (this.error < this.maxError / 4) {\r\n                this.stepSize = this.stepSize * 2;\r\n            }\r\n            //big error decrease stepSize\r\n            else if (this.error > this.maxError) {\r\n                this.stepSize = this.stepSize / 2;\r\n            }\r\n            var resOneStep = this.calculateStep(variables, this.stepSize);\r\n            var resTwoStep = this.calculateStep(this.calculateStep(variables, this.stepSize / 2), this.stepSize / 2);\r\n\r\n            Array.from(resOneStep.values()).forEach((v, i) => {\r\n                errors.push(Math.abs(Array.from(resTwoStep.values())[i] - v));\r\n            });\r\n            this.error = errors.reduce((p, c) => p + c, 0) / errors.length;\r\n        } while (this.error > this.maxError);\r\n\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: resTwoStep,\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n}\r\n\r\nexport class BulirschStoerMethod extends Solver {\r\n    solverType = SolverType.errorControlled;\r\n\r\n    error: number;\r\n    depth: number;\r\n    maxError: number;\r\n    maxDepth = 8; // how many rows to be calculated\r\n\r\n    constructor(stepSize: number, timeStep: number, model: CompartmentModel, depth: number, maxError: number) {\r\n        super(stepSize, timeStep, model);\r\n        this.error = 0;\r\n        this.depth = depth;\r\n        this.maxError = maxError;\r\n    }\r\n\r\n    //Bulirsch-Stoer Method\r\n    execute() {\r\n        var variables = this.generateVariables();\r\n        var triangleMatrix: Map<string, number>[][] = [];\r\n\r\n        //error controlling loop\r\n        do {\r\n            //error control handling\r\n            //small error decrease depth or increase stepSize\r\n            if (this.error < this.maxError / 2) {\r\n                if (this.depth > 2) {\r\n                    this.depth = this.depth - 1;\r\n                } else {\r\n                    this.stepSize = this.stepSize * 2;\r\n                    this.depth = this.depth + 1;\r\n                }\r\n            }\r\n            //big error increase depth or decrease stepSize\r\n            else if (this.error > this.maxError) {\r\n                if (this.depth < this.maxDepth) {\r\n                    this.depth = this.depth + 1;\r\n                } else {\r\n                    this.stepSize = this.stepSize / 2;\r\n                    this.depth = this.depth - 1;\r\n                }\r\n            }\r\n\r\n            var errors: number[] = [];\r\n            for (let n = 0; n < this.depth; n++) {\r\n                //rows\r\n                triangleMatrix[n] = [];\r\n                for (let m = 0; m <= n; m++) {\r\n                    //columns\r\n                    if (m === 0) {\r\n                        //steps = 2(i+1)\r\n                        triangleMatrix[n][m] = this.modifiedMidpointMethod(variables, 2 * (n + 1));\r\n                    } else {\r\n                        //extrapolation\r\n                        var Rnm: Map<string, number> = new Map();\r\n                        this.model.compartments.forEach((c) => {\r\n                            var val =\r\n                                triangleMatrix[n][m - 1].get(c.name)! +\r\n                                (triangleMatrix[n][m - 1].get(c.name)! - triangleMatrix[n - 1][m - 1].get(c.name)!) /\r\n                                    ((n / (n - 1)) ** (2 * m) - 1);\r\n                            Rnm.set(c.name, val);\r\n\r\n                            //error control\r\n                            //only take error from best estimate\r\n                            if (m === n && n === this.depth - 1) {\r\n                                errors.push(\r\n                                    Math.abs(\r\n                                        (triangleMatrix[n][m - 1].get(c.name)! -\r\n                                            triangleMatrix[n - 1][m - 1].get(c.name)!) /\r\n                                            ((n / (n - 1)) ** (2 * m) - 1),\r\n                                    ),\r\n                                );\r\n                            }\r\n                        }); //end forEach\r\n                        triangleMatrix[n][m] = Rnm;\r\n                    } //end elsif\r\n                } //end inner loop\r\n            } //end outer loop\r\n            this.error = errors.reduce((p, c) => p + c, 0) / errors.length;\r\n        } while (this.error > this.maxError); //end error control loop\r\n        this.timeStep = this.timeStep + this.stepSize;\r\n        return {\r\n            result: triangleMatrix[triangleMatrix.length - 1][triangleMatrix[triangleMatrix.length - 1].length - 1],\r\n            timeStep: this.timeStep,\r\n        };\r\n    }\r\n\r\n    //modified midpoint method\r\n    modifiedMidpointMethod(variables: Map<string, number>, n: number) {\r\n        //stepSize == H\r\n        //h == H/n\r\n        var h = this.stepSize / n;\r\n        var interVariables = new Map(variables); //contains variables for intermediary steps\r\n        var midpoints: Map<string, number[]> = new Map();\r\n        var lastPoint: Map<string, number> = new Map();\r\n\r\n        //z0 == yn == current state\r\n        //z1 = z0 + h * f(x, z0)\r\n        this.model.compartments.forEach((c) => {\r\n            var k = this.evaluateExpression(c.ODE, interVariables);\r\n            var z1 = c.value[c.value.length - 1] + h * k;\r\n\r\n            interVariables.set(c.name, z1);\r\n            midpoints.set(c.name, [c.value[c.value.length - 1], z1]);\r\n        });\r\n\r\n        //zm+1 = zm−1 + 2h ∗ f(x + m ∗ h, zm) with m = 1, 2, ..., n − 1\r\n        for (let m = 1; m < n; m++) {\r\n            this.model.compartments.forEach((c) => {\r\n                var k = this.evaluateExpression(c.ODE, interVariables);\r\n                var zm1 = midpoints.get(c.name)![m - 1] + 2 * h * k;\r\n\r\n                interVariables.set(c.name, zm1);\r\n                midpoints.get(c.name)!.push(zm1);\r\n            });\r\n        }\r\n\r\n        //y(x + H) ≈ yn ≡ 1/2*(zn + zn−1 + h ∗ f(x + H, zn))\r\n        this.model.compartments.forEach((c) => {\r\n            var k = this.evaluateExpression(c.ODE, interVariables);\r\n            var zm = (1 / 2) * (midpoints.get(c.name)![n] + midpoints.get(c.name)![n - 1] + h * k);\r\n            lastPoint.set(c.name, zm);\r\n        });\r\n        return lastPoint;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\nimport \"./ChartModule.css\";\r\nimport * as config from \"./config.json\";\r\n\r\ninterface IProps {\r\n    data: [any[]];\r\n    currentTick: number;\r\n}\r\n\r\ninterface IState {}\r\n\r\nexport default class ChartModule extends React.Component<IProps, IState> {\r\n    componentDidMount() {}\r\n\r\n    renderChart = () => {\r\n        return (\r\n            <Chart\r\n                width={\"100%\"}\r\n                height={\"500px\"}\r\n                chartType=\"LineChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={this.props.data}\r\n                options={{\r\n                    hAxis: {\r\n                        title: \"Time\",\r\n                    },\r\n                    vAxis: {\r\n                        title: \"Value\",\r\n                    },\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart\">\r\n                {config.chartTitle}\r\n                {this.props.currentTick > 0 ? (\r\n                    this.renderChart()\r\n                ) : (\r\n                    <div>\r\n                        <br />\r\n                        {config.chartNoDataAvailable}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ForceGraph2D, { NodeObject } from \"react-force-graph-2d\";\r\n\r\nimport \"./GraphModule.css\";\r\nimport { CompartmentModel } from \"./Types\";\r\nimport * as config from \"./config.json\";\r\n\r\ninterface Node {\r\n    id: string;\r\n    value: number;\r\n}\r\n\r\ninterface Link {\r\n    source: string;\r\n    target: string;\r\n}\r\n\r\ninterface Data {\r\n    nodes: Node[];\r\n    links: Link[];\r\n}\r\n\r\ninterface IProps {\r\n    model: CompartmentModel;\r\n}\r\n\r\ninterface IState {\r\n    data: Data;\r\n}\r\n\r\nexport default class GraphModule extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        var data = this.generateInitialDataStructure();\r\n\r\n        this.state = {\r\n            data: data,\r\n        };\r\n    }\r\n\r\n    generateInitialDataStructure(): Data {\r\n        var node: Node[] = [];\r\n        this.props.model.compartments.forEach((c) => {\r\n            node.push({ id: c.name, value: c.value[c.value.length - 1] });\r\n        });\r\n        var link: Link[] = [];\r\n        this.props.model.compartments.forEach((c) => {\r\n            c.ODE.symbols().forEach((sym) => link.push({ source: c.name, target: sym }));\r\n        });\r\n        return { nodes: node, links: link };\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    getRandomInt = (max: number) => {\r\n        return Math.floor(Math.random() * max);\r\n    };\r\n\r\n    nodePaint = (node: NodeObject, ctx: CanvasRenderingContext2D) => {\r\n        ctx.fillStyle =\r\n            \"#\" +\r\n            (\r\n                (node\r\n                    .id!.toString()\r\n                    .split(\"\")\r\n                    .map((x) => x.codePointAt(0)!)\r\n                    .reduce((a, b) => a + b) *\r\n                    1234567) %\r\n                Math.pow(2, 24)\r\n            )\r\n                .toString(16)\r\n                .padStart(6, \"0\");\r\n        ctx.beginPath();\r\n        ctx.arc(node.x!, node.y!, 10, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.font = \"10px Sans-Serif\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.fillText(node.id!.toString(), node.x!, node.y!);\r\n        // text\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"graph\">\r\n                {config.graphTitle}\r\n                <ForceGraph2D\r\n                    graphData={this.state.data}\r\n                    nodeLabel=\"value\"\r\n                    nodeCanvasObject={(node, ctx) => this.nodePaint(node, ctx)}\r\n                    width={600}\r\n                    height={300}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./ParserModule.css\";\r\nimport { CompartmentModel } from \"./Types\";\r\nimport { Parser, generate } from \"peggy\";\r\nimport * as config from \"./config.json\";\r\n\r\nconst Evaluator = require(\"expr-eval\").Parser;\r\n\r\nconst modelGrammar = `{{\r\nfunction makeFloat(o) {\r\n    return parseFloat(o.join(\"\"), 10);\r\n}\r\n}}\r\n\r\nmodel = parameters:parameter* _ compartments:compartment+ {return {parameters, compartments};}\r\ncompartment = \"comp\" _ name:ident _ value:value _ ODE:calc _ {return {name, value:[value], ODE};}\r\nparameter = \"param\" _ name:ident _ value:value _ {return {name, value};}\r\nident = ident:[A-Za-z0-9]+ {return ident.join(\"\")}\r\nvalue = digits:[0-9.-]+ {return makeFloat(digits);}\r\n_ \"whitespace\" = [ \\\\t\\\\n\\\\r]*\r\ncalc = \"{\" calc:[^}]* \"}\" {return calc.join(\"\")}`;\r\n\r\ninterface IProps {\r\n    setNewModel: (newModel: CompartmentModel) => void;\r\n}\r\n\r\ninterface ParseError {\r\n    hasError: boolean;\r\n    message: string;\r\n    location: string;\r\n}\r\n\r\ninterface StoredModels {\r\n    name: string;\r\n    modelText: string;\r\n}\r\n\r\ninterface IState {\r\n    modelText: string;\r\n    parser: Parser;\r\n    error: ParseError;\r\n    loadedModel: boolean;\r\n    selectedModel: number;\r\n    customModels: StoredModels[];\r\n}\r\n\r\nexport default class ParserModule extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        var retrievedModels = localStorage.getItem(\"savedModels\");\r\n        this.state = {\r\n            modelText: \"\",\r\n            parser: generate(modelGrammar),\r\n            error: { hasError: false, message: \"\", location: \"\" },\r\n            loadedModel: false,\r\n            selectedModel: 0,\r\n            customModels: retrievedModels ? JSON.parse(retrievedModels) : [],\r\n        };\r\n    }\r\n\r\n    //Parse Model\r\n    onLoadModel = (event: any) => {\r\n        //parse Input\r\n        try {\r\n            var model: CompartmentModel = this.state.parser.parse(this.state.modelText);\r\n            //insert constants\r\n            var constants = new Map();\r\n            model.parameters.forEach((p) => constants.set(p.name, p.value));\r\n            model.compartments.forEach((c) => (c.ODE = Evaluator.parse(c.ODE).simplify(Object.fromEntries(constants))));\r\n            //set model\r\n            this.props.setNewModel(model);\r\n            //error control\r\n            this.setState({ error: { hasError: false, message: \"\", location: \"\" } });\r\n\r\n            var variables = new Map();\r\n            model.compartments.forEach((p) => variables.set(p.name, p.value[0]));\r\n            model.compartments.forEach((c) => {\r\n                try {\r\n                    c.ODE.evaluate(Object.fromEntries(variables));\r\n                } catch (error) {\r\n                    this.setState({ error: { hasError: true, message: error.message, location: \"ODE for \" + c.name } });\r\n                    console.log(error);\r\n                }\r\n            });\r\n            this.setState({ loadedModel: true });\r\n        } catch (error) {\r\n            if (error.location !== undefined)\r\n                this.setState({\r\n                    error: {\r\n                        hasError: true,\r\n                        message: error.message,\r\n                        location:\r\n                            \"at line: \" + error.location.start.line + \" at column: \" + error.location.start.column,\r\n                    },\r\n                });\r\n            console.log(error);\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChangeModelText = (event: any) => {\r\n        this.setState({ modelText: event.target.value, selectedModel: 0 });\r\n    };\r\n\r\n    componentDidMount() {}\r\n\r\n    handleSelectedModel = (event: any) => {\r\n        this.setState({\r\n            selectedModel: event.target.value,\r\n            modelText: config.models.concat(this.state.customModels)[event.target.value].modelText,\r\n        });\r\n    };\r\n\r\n    onSaveModel = () => {\r\n        this.state.customModels.push({\r\n            name: \"Custom Model \" + this.state.customModels.length,\r\n            modelText: this.state.modelText,\r\n        });\r\n        localStorage.setItem(\"savedModels\", JSON.stringify(this.state.customModels));\r\n        this.setState({ selectedModel: this.state.customModels.length + 1 });\r\n    };\r\n\r\n    renderError() {\r\n        if (this.state.error.hasError) {\r\n            return (\r\n                <div>\r\n                    Error: {this.state.error.message} at {this.state.error.location}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    generateDropdownOptions() {\r\n        var options: any[] = [];\r\n        config.models.concat(this.state.customModels).forEach((model, i) =>\r\n            options.push(\r\n                <option key={i} value={i}>\r\n                    {model.name}\r\n                </option>,\r\n            ),\r\n        );\r\n\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        var error = this.renderError();\r\n\r\n        return (\r\n            <div className=\"parser\">\r\n                {config.writeModelTitle}: <a href=\"https://github.com/NeverfullD/cmv\">{config.howToWriteModelTitle}</a>\r\n                <br />\r\n                {config.loadModelTitle}:{\" \"}\r\n                <select value={this.state.selectedModel} onChange={this.handleSelectedModel}>\r\n                    {this.generateDropdownOptions()}\r\n                </select>\r\n                <br />\r\n                <textarea\r\n                    className=\"parserText\"\r\n                    placeholder={config.modelTextAreaPlaceholder}\r\n                    value={this.state.modelText}\r\n                    onChange={this.onChangeModelText}\r\n                />\r\n                <br />\r\n                <button onClick={this.onLoadModel}>\r\n                    {this.state.loadedModel ? config.reloadModelButton : config.loadModelButton}\r\n                </button>\r\n                <button onClick={this.onSaveModel}>{config.saveModelButton}</button>\r\n                <br />\r\n                {error}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export class CsvDataService {\r\n    static exportToCsv(filename: string, data: [any[]]) {\r\n        const separator = \",\";\r\n        const csvContent = data\r\n            .map((row) => {\r\n                return row.join(separator);\r\n            })\r\n            .join(\"\\n\");\r\n\r\n        const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n        if (navigator.msSaveBlob) {\r\n            // IE 10+\r\n            navigator.msSaveBlob(blob, filename);\r\n        } else {\r\n            const link = document.createElement(\"a\");\r\n            if (link.download !== undefined) {\r\n                // Browsers that support HTML5 download attribute\r\n                const url = URL.createObjectURL(blob);\r\n                link.setAttribute(\"href\", url);\r\n                link.setAttribute(\"download\", filename);\r\n                link.style.visibility = \"hidden\";\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./SettingsModule.css\";\r\nimport * as config from \"./config.json\";\r\nimport { SolverType } from \"./Solver\";\r\nimport { CsvDataService } from \"./CSVDataService\";\r\n\r\ninterface IProps {\r\n    onSimulate: (n: number) => void;\r\n    changeStepSize: (stepSize: number) => void;\r\n    changeMaxError: (maxError: number) => void;\r\n    stepSize: number;\r\n    maxError: number;\r\n    selectedSolver: string;\r\n    selectedSolverType: SolverType;\r\n    changeSelectedSolver: (selectedSolver: string) => void;\r\n    data: [any[]];\r\n}\r\n\r\ninterface IState {\r\n    time: string;\r\n    stepSize: string;\r\n    maxError: string;\r\n}\r\n\r\nexport default class SettingsModule extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = { time: \"\", stepSize: props.stepSize.toString(), maxError: props.maxError.toString() };\r\n    }\r\n\r\n    onSimulate1 = () => {\r\n        this.props.onSimulate(1);\r\n    };\r\n    onSimulate10 = () => {\r\n        this.props.onSimulate(10);\r\n    };\r\n    onSimulate100 = () => {\r\n        this.props.onSimulate(100);\r\n    };\r\n    onSimulate = () => {\r\n        this.props.onSimulate(parseFloat(this.state.time));\r\n    };\r\n\r\n    handleChangeSteps = (event: any) => {\r\n        this.setState({ time: event.target.value });\r\n    };\r\n\r\n    onChangeStepSize = () => {\r\n        this.props.changeStepSize(parseFloat(this.state.stepSize));\r\n    };\r\n    handleChangeStepSize = (event: any) => {\r\n        this.setState({ stepSize: event.target.value });\r\n    };\r\n\r\n    onChangeMaxError = () => {\r\n        this.props.changeMaxError(parseFloat(this.state.maxError));\r\n    };\r\n    handleChangeMaxError = (event: any) => {\r\n        this.setState({ maxError: event.target.value });\r\n    };\r\n\r\n    handleSelectedSolver = (event: any) => {\r\n        this.props.changeSelectedSolver(event.target.value);\r\n    };\r\n\r\n    onGetData = () => {\r\n        CsvDataService.exportToCsv(\"data.csv\", this.props.data);\r\n    };\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        var settings;\r\n\r\n        if (this.props.selectedSolverType === SolverType.manualStepSize) {\r\n            settings = [\r\n                <br />,\r\n                <input type=\"text\" value={this.state.stepSize} onChange={this.handleChangeStepSize} />,\r\n                <button onClick={this.onChangeStepSize}>{config.setStepSizeButton}</button>,\r\n            ];\r\n        } else if (this.props.selectedSolverType === SolverType.errorControlled) {\r\n            settings = [\r\n                <br />,\r\n                <input type=\"text\" value={this.state.maxError} onChange={this.handleChangeMaxError} />,\r\n                <button onClick={this.onChangeMaxError}>{config.setMaxErrorButton}</button>,\r\n            ];\r\n        }\r\n\r\n        return (\r\n            <div className=\"settings\">\r\n                <div>\r\n                    {config.solverTitle}\r\n                    <br />\r\n                    <select value={this.props.selectedSolver} onChange={this.handleSelectedSolver}>\r\n                        <option value=\"euler\">Euler</option>\r\n                        <option value=\"rungeKutta2\">Runge-Kutta 2.Order</option>\r\n                        <option value=\"rungeKutta4\">Runge-Kutta 4.Order</option>\r\n                        <option value=\"rungeKutta4Automatic\">Runge-Kutta 4.Order Automatic</option>\r\n                        <option value=\"bulirschStoer\">Bulirsch-Stoer</option>\r\n                    </select>\r\n                    {settings}\r\n                </div>\r\n                <div>\r\n                    {config.timeControlTitle}\r\n                    <br />\r\n                    <button onClick={this.onSimulate1}>{config.simulateForButton} 1</button>\r\n                    <button onClick={this.onSimulate10}>10</button>\r\n                    <button onClick={this.onSimulate100}>100</button>\r\n                    <br />\r\n                    <button onClick={this.onSimulate}>{config.simulateForButton} </button>\r\n                    <input type=\"text\" value={this.state.time} onChange={this.handleChangeSteps} />\r\n                    <br />\r\n                </div>\r\n                <div>\r\n                    {config.getDataTitle}\r\n                    <br />\r\n                    <button onClick={this.onGetData}>{config.getDataButton} </button>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\nimport { CompartmentModel } from \"./Types\";\r\nimport {\r\n    BulirschStoerMethod,\r\n    EulerMethod,\r\n    Result,\r\n    RungeKutta2Method,\r\n    RungeKutta4AutomaticMethod,\r\n    RungeKutta4Method,\r\n    Solver,\r\n} from \"./Solver\";\r\nimport ChartModule from \"./ChartModule\";\r\nimport GraphModule from \"./GraphModule\";\r\nimport ParserModule from \"./ParserModule\";\r\nimport SettingsModule from \"./SettingsModule\";\r\nimport * as config from \"./config.json\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {\r\n    model: CompartmentModel;\r\n    timeSteps: number[];\r\n    currentTick: number;\r\n    stepSize: number;\r\n    maxError: number;\r\n    solver: Solver;\r\n    selectedSolver: string;\r\n}\r\n\r\nexport default class Main extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            model: { parameters: [], compartments: [] },\r\n            currentTick: -1,\r\n            timeSteps: [],\r\n            stepSize: 0.1,\r\n            maxError: 0.001,\r\n            solver: new EulerMethod(0, 0, { parameters: [], compartments: [] }),\r\n            selectedSolver: \"euler\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    //handle Settings\r\n    setModel = (newModel: CompartmentModel) => {\r\n        this.setState({\r\n            model: newModel,\r\n            currentTick: 0,\r\n            timeSteps: [0],\r\n            solver: this.getSolver(this.state.selectedSolver, 0, newModel),\r\n        });\r\n    };\r\n\r\n    onSimulate = (n: number) => {\r\n        this.solveTime(n);\r\n    };\r\n\r\n    changeStepSize = (stepSize: number) => {\r\n        this.setState({ stepSize: stepSize });\r\n    };\r\n\r\n    changeMaxError = (maxError: number) => {\r\n        this.setState({ maxError: maxError });\r\n    };\r\n\r\n    changeSelectedSolver = (selectedSolver: string) => {\r\n        this.setState({\r\n            selectedSolver: selectedSolver,\r\n            solver: this.getSolver(\r\n                selectedSolver,\r\n                this.state.timeSteps[this.state.timeSteps.length - 1],\r\n                this.state.model,\r\n            ),\r\n        });\r\n    };\r\n\r\n    getSolver(selectedSolver: string, timeStep: number, model: CompartmentModel): Solver {\r\n        switch (selectedSolver) {\r\n            case \"euler\":\r\n                return new EulerMethod(this.state.stepSize, timeStep, model);\r\n            case \"rungeKutta2\":\r\n                return new RungeKutta2Method(this.state.stepSize, timeStep, model);\r\n            case \"rungeKutta4\":\r\n                return new RungeKutta4Method(this.state.stepSize, timeStep, model);\r\n            case \"rungeKutta4Automatic\":\r\n                return new RungeKutta4AutomaticMethod(0.1, timeStep, model, this.state.maxError);\r\n            case \"bulirschStoer\":\r\n                return new BulirschStoerMethod(0.1, timeStep, model, 4, this.state.maxError);\r\n            default:\r\n                return new EulerMethod(this.state.stepSize, timeStep, model);\r\n        }\r\n    }\r\n\r\n    //simulation Core\r\n    applyResult(res: Result) {\r\n        this.state.model.compartments.forEach((c) => {\r\n            c.value.push(res.result.get(c.name)!);\r\n        });\r\n        //save Timestamps for variable step size\r\n        this.state.timeSteps.push(res.timeStep);\r\n    }\r\n\r\n    //Main for solvers\r\n    solveTime(time: number) {\r\n        var steps = 0;\r\n        var endTime = this.state.timeSteps[this.state.timeSteps.length - 1] + time;\r\n        while (this.state.timeSteps[this.state.timeSteps.length - 1] < endTime) {\r\n            //calculate Step\r\n            this.applyResult(this.state.solver.execute());\r\n            steps++;\r\n        }\r\n        //endCurrentTick\r\n        this.setState({ currentTick: this.state.currentTick + steps });\r\n    }\r\n\r\n    generateData() {\r\n        var header: any[] = [\"x\"];\r\n        this.state.model.compartments.forEach((c) => header.push(c.name));\r\n\r\n        var data: [any[]] = [header];\r\n\r\n        for (let i = 0; i <= this.state.currentTick; i++) {\r\n            var dataPoint = [this.state.timeSteps[i]];\r\n            this.state.model.compartments.forEach((c) => dataPoint.push(c.value[i]));\r\n            data.push(dataPoint);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    render() {\r\n        var data = this.generateData();\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <h2>{config.title}</h2>\r\n                <ParserModule setNewModel={this.setModel} />\r\n                <GraphModule model={this.state.model} key={this.state.currentTick + \"graph\"} />\r\n                <SettingsModule\r\n                    onSimulate={this.onSimulate}\r\n                    changeStepSize={this.changeStepSize}\r\n                    changeMaxError={this.changeMaxError}\r\n                    stepSize={this.state.stepSize}\r\n                    maxError={this.state.maxError}\r\n                    selectedSolver={this.state.selectedSolver}\r\n                    selectedSolverType={this.state.solver.solverType}\r\n                    changeSelectedSolver={this.changeSelectedSolver}\r\n                    data={data}\r\n                />\r\n                <ChartModule data={data} currentTick={this.state.currentTick} key={this.state.currentTick + \"chart\"} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}